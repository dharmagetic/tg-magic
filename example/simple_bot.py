# -*- coding: utf-8 -*-
import logging
from telegram.ext import CommandHandler
from telegram.ext import Filters
from telegram.ext import MessageHandler
from telegram.ext import Updater
import os

from tgmagic.buttons import PrevButton, ExtendNames
from tgmagic.bot import MagicFunction
from tgmagic.helper import menu

#from collections import OrderedDict
'''
my_custom_menu = OrderedDict([
	('menu', OrderedDict([
		('inventory', '‚õè–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å'),
		('inventory_nested', OrderedDict([
			('potion', '‚öó–ó–µ–ª—å—è'),
			('armor', 'üõ°–ë—Ä–æ–Ω—è'),
			('weapon', '‚öî–û—Ä—É–∂–∏–µ'),
			('prev', PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥')),
			('weapon_nested', OrderedDict([
				('sword', 'üó°–ú–µ—á'),
				('knife', 'üî™–ù–æ–∂'),
				('prev', PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥')),
				('prev2', PrevButton('‚è™–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 2))
			]))
		])),
		('magic', 'üîÆ–ú–∞–≥–∏—è'),
		('magic_nested', OrderedDict([
			('fire', 'üî•–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä!'),
			('cold', '‚ùÑÔ∏è–õ–µ–¥—è–Ω–æ–π —à–∏–ø'),
			('prev', PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥'))
		])),
		('skills', '‚õì–ù–∞–≤—ã–∫–∏'),
		('map', 'üó∫–ö–∞—Ä—Ç–∞ –º–∏—Ä–∞')
	]))
])'''

ExtendNames().start_element = 'menu1'

my_custom_menu = {
	'menu1': {
		'magic': 'üîÆ–ú–∞–≥–∏—è',
		'magic_nested': {
			'fire': 'üî•–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä!',
			'cold': '‚ùÑÔ∏è–õ–µ–¥—è–Ω–æ–π —à–∏–ø',
			'prev': (PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥'))
		},
		'inventory': '‚õè–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å',
		'inventory_nested': {
			'potion': '‚öó–ó–µ–ª—å—è',
			'armor': 'üõ°–ë—Ä–æ–Ω—è',
			'weapon': '‚öî–û—Ä—É–∂–∏–µ',
			'prev': PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥'),
			'weapon_nested': {
				'sword': 'üó°–ú–µ—á',
				'knife': 'üî™–ù–æ–∂',
				'prev': PrevButton('‚óÄÔ∏è–ù–∞–∑–∞–¥')
			}
		},
	}
}

logging.basicConfig(level=logging.INFO, filename='pliskin.log',
					format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
console = logging.StreamHandler()
console.setLevel(logging.DEBUG)
formatter = logging.Formatter('[%(asctime)s] %(name)s: %(levelname)s %(message)s')
console.setFormatter(formatter)
logging.getLogger().addHandler(console)


class TestBot(MagicFunction):
	def start(self, bot, update):
		bot.sendMessage(
			text='–ü—Ä–∏–≤–µ—Ç, —Å—Ç—Ä–∞–Ω–Ω–∏–∫!',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def inventory(self, bot, update):
		bot.sendMessage(
			text='–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ?',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def potion(self, bot, update):
		text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ—Ç –∑–µ–ª–∏–π :(' + os.linesep
		text += '–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, –∫–æ–≥–¥–∞ –æ–±—É—á–∏—à—å—Å—è –∞–ª—Ö–∏–º–∏–∏!' + os.linesep
		bot.sendMessage(
			text=text,
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def armor(self, bot, update):
		text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ—Ç –±—Ä–æ–Ω–∏ :(' + os.linesep
		text += '–ë–µ–∑–∑–∞—â–∏—Ç–Ω—ã–π –≤–æ–∏–Ω? –ò –∫–∞–∫ –∂–∏—Ç—å-—Ç–æ –±—É–¥–µ—à—å?' + os.linesep
		bot.sendMessage(
			text=text,
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def weapon(self, bot, update):
		bot.sendMessage(
			text='–ö–∞–∫–∏–º –æ—Ä—É–∂–∏–µ–º —Ç—ã —Ö–æ—á–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def magic(self, bot, update):
		bot.sendMessage(
			text='–ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è? –ß—Ç–æ–∂, –∫–∞–∫–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def sword(self, bot, update):
		bot.sendMessage(
			text='üó°–û–¥–∏–Ω –ø—Ä–æ–≥–∏–± –∏ —Ç—ã –ø–æ–≥–∏–±. –û–¥–∏–Ω —É–¥–∞—Ä –∏ —Ç—ã —Ä–∞–∑—Ä—É–±–ª–µ–Ω –Ω–∞ –∫—É—Å–∫–∏! üó°',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def knife(self, bot, update):
		bot.sendMessage(
			text='üî™–ù–æ–∂ –≤ –ø–µ—á–µ–Ω—å ‚Äì –Ω–∏–∫—Ç–æ –Ω–µ –≤–µ—á–µ–Ω!',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def fire(self, bot, update):
		bot.sendMessage(
			text='–ë–æ–≥ –∫–∞—Ä–∞–µ—Ç –æ–≥–Ω—ë–º. –Ø —Ç–æ–∂–µ!',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def cold(self, bot, update):
		bot.sendMessage(
			text='–í—Ä–µ–º—è —Å–æ—Å—É–ª–µ–∫, —Å—É—á–∫–∏!',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	def prev(self, bot, update):
		bot.sendMessage(
			text='–í–æ–∑—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥...',
			chat_id=update.message.chat_id,
			reply_markup=self.gen_keyboard(update)
		)

	@menu
	def text(self, bot, update):
		# ...
		# and any other handlers
		pass

	def main(self):
		self.set_custom_menu(my_custom_menu)
		updater = Updater('276528186:AAGll9dpR_YphvXlgpmp2yKE7kGlx-5jIV0')
		dp = updater.dispatcher
		dp.add_handler(CommandHandler('start', self.start))
		dp.add_handler(MessageHandler(Filters.text, self.text))
		updater.start_polling()


TestBot().main()
